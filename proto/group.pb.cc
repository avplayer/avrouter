// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace group {

namespace {

const ::google::protobuf::Descriptor* security_key_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  security_key_reflection_ = NULL;
const ::google::protobuf::Descriptor* member_change_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  member_change_reflection_ = NULL;
const ::google::protobuf::Descriptor* member_change_buddy_state_notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  member_change_buddy_state_notify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* member_change_buddy_state_descriptor_ = NULL;
const ::google::protobuf::Descriptor* list_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  list_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* list_response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  list_response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* list_response_result_code_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_group_2eproto() {
  protobuf_AddDesc_group_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "group.proto");
  GOOGLE_CHECK(file != NULL);
  security_key_descriptor_ = file->message_type(0);
  static const int security_key_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, prev_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, valid_until_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, key_id_),
  };
  security_key_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      security_key_descriptor_,
      security_key::default_instance_,
      security_key_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, _has_bits_[0]),
      -1,
      -1,
      sizeof(security_key),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(security_key, _internal_metadata_),
      -1);
  member_change_descriptor_ = file->message_type(1);
  static const int member_change_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, new_bie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, gone_bie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, buddy_status_),
  };
  member_change_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      member_change_descriptor_,
      member_change::default_instance_,
      member_change_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, _has_bits_[0]),
      -1,
      -1,
      sizeof(member_change),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change, _internal_metadata_),
      -1);
  member_change_buddy_state_notify_descriptor_ = member_change_descriptor_->nested_type(0);
  static const int member_change_buddy_state_notify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change_buddy_state_notify, who_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change_buddy_state_notify, state_),
  };
  member_change_buddy_state_notify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      member_change_buddy_state_notify_descriptor_,
      member_change_buddy_state_notify::default_instance_,
      member_change_buddy_state_notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change_buddy_state_notify, _has_bits_[0]),
      -1,
      -1,
      sizeof(member_change_buddy_state_notify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(member_change_buddy_state_notify, _internal_metadata_),
      -1);
  member_change_buddy_state_descriptor_ = member_change_descriptor_->enum_type(0);
  list_request_descriptor_ = file->message_type(2);
  static const int list_request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_request, id_),
  };
  list_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      list_request_descriptor_,
      list_request::default_instance_,
      list_request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_request, _has_bits_[0]),
      -1,
      -1,
      sizeof(list_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_request, _internal_metadata_),
      -1);
  list_response_descriptor_ = file->message_type(3);
  static const int list_response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_response, list_),
  };
  list_response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      list_response_descriptor_,
      list_response::default_instance_,
      list_response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_response, _has_bits_[0]),
      -1,
      -1,
      sizeof(list_response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(list_response, _internal_metadata_),
      -1);
  list_response_result_code_descriptor_ = list_response_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_group_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      security_key_descriptor_, &security_key::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      member_change_descriptor_, &member_change::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      member_change_buddy_state_notify_descriptor_, &member_change_buddy_state_notify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      list_request_descriptor_, &list_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      list_response_descriptor_, &list_response::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_group_2eproto() {
  delete security_key::default_instance_;
  delete security_key_reflection_;
  delete member_change::default_instance_;
  delete member_change_reflection_;
  delete member_change_buddy_state_notify::default_instance_;
  delete member_change_buddy_state_notify_reflection_;
  delete list_request::default_instance_;
  delete list_request_reflection_;
  delete list_response::default_instance_;
  delete list_response_reflection_;
}

void protobuf_AddDesc_group_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_AddDesc_address_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013group.proto\022\013proto.group\032\raddress.prot"
    "o\"R\n\014security_key\022\013\n\003key\030\001 \002(\014\022\020\n\010prev_k"
    "ey\030\002 \002(\014\022\023\n\013valid_until\030\003 \002(\004\022\016\n\006key_id\030"
    "\004 \002(\r\"\212\003\n\rmember_change\022!\n\006sender\030\001 \001(\0132"
    "\021.proto.av_address\022&\n\003key\030\002 \001(\0132\031.proto."
    "group.security_key\022\"\n\007new_bie\030\003 \003(\0132\021.pr"
    "oto.av_address\022#\n\010gone_bie\030\004 \003(\0132\021.proto"
    ".av_address\022C\n\014buddy_status\030\005 \003(\0132-.prot"
    "o.group.member_change.buddy_state_notify"
    "\032k\n\022buddy_state_notify\022\036\n\003who\030\001 \002(\0132\021.pr"
    "oto.av_address\0225\n\005state\030\002 \002(\0162&.proto.gr"
    "oup.member_change.buddy_state\"3\n\013buddy_s"
    "tate\022\n\n\006ONLINE\020\000\022\013\n\007OFFLINE\020\001\022\013\n\007HIDDING"
    "\020\002\"\032\n\014list_request\022\n\n\002id\030\001 \002(\r\"\246\001\n\rlist_"
    "response\022:\n\006result\030\001 \002(\0162&.proto.group.l"
    "ist_response.result_code:\002OK\022\014\n\004list\030\002 \003"
    "(\t\"K\n\013result_code\022\006\n\002OK\020\000\022\033\n\027FAILED_INVA"
    "LID_GROUP_ID\020\001\022\027\n\023FAILED_NO_PRIVILEGE\020dP"
    "\000", 721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "group.proto", &protobuf_RegisterTypes);
  security_key::default_instance_ = new security_key();
  member_change::default_instance_ = new member_change();
  member_change_buddy_state_notify::default_instance_ = new member_change_buddy_state_notify();
  list_request::default_instance_ = new list_request();
  list_response::default_instance_ = new list_response();
  security_key::default_instance_->InitAsDefaultInstance();
  member_change::default_instance_->InitAsDefaultInstance();
  member_change_buddy_state_notify::default_instance_->InitAsDefaultInstance();
  list_request::default_instance_->InitAsDefaultInstance();
  list_response::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_group_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_group_2eproto {
  StaticDescriptorInitializer_group_2eproto() {
    protobuf_AddDesc_group_2eproto();
  }
} static_descriptor_initializer_group_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int security_key::kKeyFieldNumber;
const int security_key::kPrevKeyFieldNumber;
const int security_key::kValidUntilFieldNumber;
const int security_key::kKeyIdFieldNumber;
#endif  // !_MSC_VER

security_key::security_key()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.group.security_key)
}

void security_key::InitAsDefaultInstance() {
}

security_key::security_key(const security_key& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.group.security_key)
}

void security_key::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_until_ = GOOGLE_ULONGLONG(0);
  key_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

#if __cplusplus >= 201103L || _MSC_VER >= 1600
security_key::security_key(security_key&& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  Swap(&from);
}
#endif

security_key::~security_key() {
  // @@protoc_insertion_point(destructor:proto.group.security_key)
  SharedDtor();
}

void security_key::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void security_key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* security_key::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return security_key_descriptor_;
}

const security_key& security_key::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_2eproto();
  return *default_instance_;
}

security_key* security_key::default_instance_ = NULL;

security_key* security_key::New(::google::protobuf::Arena* arena) const {
  security_key* n = new security_key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void security_key::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<security_key*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(valid_until_, key_id_);
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_prev_key()) {
      prev_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool security_key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.group.security_key)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prev_key;
        break;
      }

      // required bytes prev_key = 2;
      case 2: {
        if (tag == 18) {
         parse_prev_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_valid_until;
        break;
      }

      // required uint64 valid_until = 3;
      case 3: {
        if (tag == 24) {
         parse_valid_until:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &valid_until_)));
          set_has_valid_until();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_key_id;
        break;
      }

      // required uint32 key_id = 4;
      case 4: {
        if (tag == 32) {
         parse_key_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
          set_has_key_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.group.security_key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.group.security_key)
  return false;
#undef DO_
}

void security_key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.group.security_key)
  // required bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required bytes prev_key = 2;
  if (has_prev_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prev_key(), output);
  }

  // required uint64 valid_until = 3;
  if (has_valid_until()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->valid_until(), output);
  }

  // required uint32 key_id = 4;
  if (has_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->key_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.group.security_key)
}

::google::protobuf::uint8* security_key::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.group.security_key)
  // required bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required bytes prev_key = 2;
  if (has_prev_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prev_key(), target);
  }

  // required uint64 valid_until = 3;
  if (has_valid_until()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->valid_until(), target);
  }

  // required uint32 key_id = 4;
  if (has_key_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->key_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.group.security_key)
  return target;
}

int security_key::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_prev_key()) {
    // required bytes prev_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prev_key());
  }

  if (has_valid_until()) {
    // required uint64 valid_until = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->valid_until());
  }

  if (has_key_id()) {
    // required uint32 key_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_id());
  }

  return total_size;
}
int security_key::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required bytes prev_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prev_key());

    // required uint64 valid_until = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->valid_until());

    // required uint32 key_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void security_key::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const security_key* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const security_key*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void security_key::MergeFrom(const security_key& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_prev_key()) {
      set_has_prev_key();
      prev_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_key_);
    }
    if (from.has_valid_until()) {
      set_valid_until(from.valid_until());
    }
    if (from.has_key_id()) {
      set_key_id(from.key_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void security_key::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void security_key::CopyFrom(const security_key& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool security_key::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void security_key::Swap(security_key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void security_key::InternalSwap(security_key* other) {
  key_.Swap(&other->key_);
  prev_key_.Swap(&other->prev_key_);
  std::swap(valid_until_, other->valid_until_);
  std::swap(key_id_, other->key_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata security_key::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = security_key_descriptor_;
  metadata.reflection = security_key_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* member_change_buddy_state_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return member_change_buddy_state_descriptor_;
}
bool member_change_buddy_state_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const member_change_buddy_state member_change::ONLINE;
const member_change_buddy_state member_change::OFFLINE;
const member_change_buddy_state member_change::HIDDING;
const member_change_buddy_state member_change::buddy_state_MIN;
const member_change_buddy_state member_change::buddy_state_MAX;
const int member_change::buddy_state_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int member_change_buddy_state_notify::kWhoFieldNumber;
const int member_change_buddy_state_notify::kStateFieldNumber;
#endif  // !_MSC_VER

member_change_buddy_state_notify::member_change_buddy_state_notify()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.group.member_change.buddy_state_notify)
}

void member_change_buddy_state_notify::InitAsDefaultInstance() {
  who_ = const_cast< ::proto::av_address*>(&::proto::av_address::default_instance());
}

member_change_buddy_state_notify::member_change_buddy_state_notify(const member_change_buddy_state_notify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.group.member_change.buddy_state_notify)
}

void member_change_buddy_state_notify::SharedCtor() {
  _cached_size_ = 0;
  who_ = NULL;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

#if __cplusplus >= 201103L || _MSC_VER >= 1600
member_change_buddy_state_notify::member_change_buddy_state_notify(member_change_buddy_state_notify&& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  Swap(&from);
}
#endif

member_change_buddy_state_notify::~member_change_buddy_state_notify() {
  // @@protoc_insertion_point(destructor:proto.group.member_change.buddy_state_notify)
  SharedDtor();
}

void member_change_buddy_state_notify::SharedDtor() {
  if (this != default_instance_) {
    delete who_;
  }
}

void member_change_buddy_state_notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* member_change_buddy_state_notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return member_change_buddy_state_notify_descriptor_;
}

const member_change_buddy_state_notify& member_change_buddy_state_notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_2eproto();
  return *default_instance_;
}

member_change_buddy_state_notify* member_change_buddy_state_notify::default_instance_ = NULL;

member_change_buddy_state_notify* member_change_buddy_state_notify::New(::google::protobuf::Arena* arena) const {
  member_change_buddy_state_notify* n = new member_change_buddy_state_notify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void member_change_buddy_state_notify::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_who()) {
      if (who_ != NULL) who_->::proto::av_address::Clear();
    }
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool member_change_buddy_state_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.group.member_change.buddy_state_notify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.av_address who = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_who()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // required .proto.group.member_change.buddy_state state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::group::member_change_buddy_state_IsValid(value)) {
            set_state(static_cast< ::proto::group::member_change_buddy_state >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.group.member_change.buddy_state_notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.group.member_change.buddy_state_notify)
  return false;
#undef DO_
}

void member_change_buddy_state_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.group.member_change.buddy_state_notify)
  // required .proto.av_address who = 1;
  if (has_who()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->who_, output);
  }

  // required .proto.group.member_change.buddy_state state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.group.member_change.buddy_state_notify)
}

::google::protobuf::uint8* member_change_buddy_state_notify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.group.member_change.buddy_state_notify)
  // required .proto.av_address who = 1;
  if (has_who()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->who_, target);
  }

  // required .proto.group.member_change.buddy_state state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.group.member_change.buddy_state_notify)
  return target;
}

int member_change_buddy_state_notify::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_who()) {
    // required .proto.av_address who = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->who_);
  }

  if (has_state()) {
    // required .proto.group.member_change.buddy_state state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  return total_size;
}
int member_change_buddy_state_notify::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .proto.av_address who = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->who_);

    // required .proto.group.member_change.buddy_state state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void member_change_buddy_state_notify::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const member_change_buddy_state_notify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const member_change_buddy_state_notify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void member_change_buddy_state_notify::MergeFrom(const member_change_buddy_state_notify& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_who()) {
      mutable_who()->::proto::av_address::MergeFrom(from.who());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void member_change_buddy_state_notify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void member_change_buddy_state_notify::CopyFrom(const member_change_buddy_state_notify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool member_change_buddy_state_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_who()) {
    if (!this->who_->IsInitialized()) return false;
  }
  return true;
}

void member_change_buddy_state_notify::Swap(member_change_buddy_state_notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void member_change_buddy_state_notify::InternalSwap(member_change_buddy_state_notify* other) {
  std::swap(who_, other->who_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata member_change_buddy_state_notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = member_change_buddy_state_notify_descriptor_;
  metadata.reflection = member_change_buddy_state_notify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int member_change::kSenderFieldNumber;
const int member_change::kKeyFieldNumber;
const int member_change::kNewBieFieldNumber;
const int member_change::kGoneBieFieldNumber;
const int member_change::kBuddyStatusFieldNumber;
#endif  // !_MSC_VER

member_change::member_change()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.group.member_change)
}

void member_change::InitAsDefaultInstance() {
  sender_ = const_cast< ::proto::av_address*>(&::proto::av_address::default_instance());
  key_ = const_cast< ::proto::group::security_key*>(&::proto::group::security_key::default_instance());
}

member_change::member_change(const member_change& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.group.member_change)
}

void member_change::SharedCtor() {
  _cached_size_ = 0;
  sender_ = NULL;
  key_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

#if __cplusplus >= 201103L || _MSC_VER >= 1600
member_change::member_change(member_change&& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  Swap(&from);
}
#endif

member_change::~member_change() {
  // @@protoc_insertion_point(destructor:proto.group.member_change)
  SharedDtor();
}

void member_change::SharedDtor() {
  if (this != default_instance_) {
    delete sender_;
    delete key_;
  }
}

void member_change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* member_change::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return member_change_descriptor_;
}

const member_change& member_change::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_2eproto();
  return *default_instance_;
}

member_change* member_change::default_instance_ = NULL;

member_change* member_change::New(::google::protobuf::Arena* arena) const {
  member_change* n = new member_change;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void member_change::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_sender()) {
      if (sender_ != NULL) sender_->::proto::av_address::Clear();
    }
    if (has_key()) {
      if (key_ != NULL) key_->::proto::group::security_key::Clear();
    }
  }
  new_bie_.Clear();
  gone_bie_.Clear();
  buddy_status_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool member_change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.group.member_change)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.av_address sender = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional .proto.group.security_key key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_new_bie;
        break;
      }

      // repeated .proto.av_address new_bie = 3;
      case 3: {
        if (tag == 26) {
         parse_new_bie:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_new_bie()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_new_bie;
        if (input->ExpectTag(34)) goto parse_gone_bie;
        break;
      }

      // repeated .proto.av_address gone_bie = 4;
      case 4: {
        if (tag == 34) {
         parse_gone_bie:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gone_bie()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gone_bie;
        if (input->ExpectTag(42)) goto parse_buddy_status;
        break;
      }

      // repeated .proto.group.member_change.buddy_state_notify buddy_status = 5;
      case 5: {
        if (tag == 42) {
         parse_buddy_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buddy_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_buddy_status;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.group.member_change)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.group.member_change)
  return false;
#undef DO_
}

void member_change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.group.member_change)
  // optional .proto.av_address sender = 1;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sender_, output);
  }

  // optional .proto.group.security_key key = 2;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  // repeated .proto.av_address new_bie = 3;
  for (unsigned int i = 0, n = this->new_bie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->new_bie(i), output);
  }

  // repeated .proto.av_address gone_bie = 4;
  for (unsigned int i = 0, n = this->gone_bie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gone_bie(i), output);
  }

  // repeated .proto.group.member_change.buddy_state_notify buddy_status = 5;
  for (unsigned int i = 0, n = this->buddy_status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->buddy_status(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.group.member_change)
}

::google::protobuf::uint8* member_change::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.group.member_change)
  // optional .proto.av_address sender = 1;
  if (has_sender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->sender_, target);
  }

  // optional .proto.group.security_key key = 2;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->key_, target);
  }

  // repeated .proto.av_address new_bie = 3;
  for (unsigned int i = 0, n = this->new_bie_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->new_bie(i), target);
  }

  // repeated .proto.av_address gone_bie = 4;
  for (unsigned int i = 0, n = this->gone_bie_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gone_bie(i), target);
  }

  // repeated .proto.group.member_change.buddy_state_notify buddy_status = 5;
  for (unsigned int i = 0, n = this->buddy_status_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->buddy_status(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.group.member_change)
  return target;
}

int member_change::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional .proto.av_address sender = 1;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sender_);
    }

    // optional .proto.group.security_key key = 2;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->key_);
    }

  }
  // repeated .proto.av_address new_bie = 3;
  total_size += 1 * this->new_bie_size();
  for (int i = 0; i < this->new_bie_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->new_bie(i));
  }

  // repeated .proto.av_address gone_bie = 4;
  total_size += 1 * this->gone_bie_size();
  for (int i = 0; i < this->gone_bie_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gone_bie(i));
  }

  // repeated .proto.group.member_change.buddy_state_notify buddy_status = 5;
  total_size += 1 * this->buddy_status_size();
  for (int i = 0; i < this->buddy_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buddy_status(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void member_change::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const member_change* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const member_change*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void member_change::MergeFrom(const member_change& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  new_bie_.MergeFrom(from.new_bie_);
  gone_bie_.MergeFrom(from.gone_bie_);
  buddy_status_.MergeFrom(from.buddy_status_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sender()) {
      mutable_sender()->::proto::av_address::MergeFrom(from.sender());
    }
    if (from.has_key()) {
      mutable_key()->::proto::group::security_key::MergeFrom(from.key());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void member_change::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void member_change::CopyFrom(const member_change& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool member_change::IsInitialized() const {

  if (has_sender()) {
    if (!this->sender_->IsInitialized()) return false;
  }
  if (has_key()) {
    if (!this->key_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->new_bie())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->gone_bie())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->buddy_status())) return false;
  return true;
}

void member_change::Swap(member_change* other) {
  if (other == this) return;
  InternalSwap(other);
}
void member_change::InternalSwap(member_change* other) {
  std::swap(sender_, other->sender_);
  std::swap(key_, other->key_);
  new_bie_.UnsafeArenaSwap(&other->new_bie_);
  gone_bie_.UnsafeArenaSwap(&other->gone_bie_);
  buddy_status_.UnsafeArenaSwap(&other->buddy_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata member_change::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = member_change_descriptor_;
  metadata.reflection = member_change_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int list_request::kIdFieldNumber;
#endif  // !_MSC_VER

list_request::list_request()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.group.list_request)
}

void list_request::InitAsDefaultInstance() {
}

list_request::list_request(const list_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.group.list_request)
}

void list_request::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

#if __cplusplus >= 201103L || _MSC_VER >= 1600
list_request::list_request(list_request&& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  Swap(&from);
}
#endif

list_request::~list_request() {
  // @@protoc_insertion_point(destructor:proto.group.list_request)
  SharedDtor();
}

void list_request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void list_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* list_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return list_request_descriptor_;
}

const list_request& list_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_2eproto();
  return *default_instance_;
}

list_request* list_request::default_instance_ = NULL;

list_request* list_request::New(::google::protobuf::Arena* arena) const {
  list_request* n = new list_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void list_request::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool list_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.group.list_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.group.list_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.group.list_request)
  return false;
#undef DO_
}

void list_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.group.list_request)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.group.list_request)
}

::google::protobuf::uint8* list_request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.group.list_request)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.group.list_request)
  return target;
}

int list_request::ByteSize() const {
  int total_size = 0;

  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void list_request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const list_request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const list_request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void list_request::MergeFrom(const list_request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void list_request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_request::CopyFrom(const list_request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void list_request::Swap(list_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_request::InternalSwap(list_request* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata list_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = list_request_descriptor_;
  metadata.reflection = list_request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* list_response_result_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return list_response_result_code_descriptor_;
}
bool list_response_result_code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 100:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const list_response_result_code list_response::OK;
const list_response_result_code list_response::FAILED_INVALID_GROUP_ID;
const list_response_result_code list_response::FAILED_NO_PRIVILEGE;
const list_response_result_code list_response::result_code_MIN;
const list_response_result_code list_response::result_code_MAX;
const int list_response::result_code_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int list_response::kResultFieldNumber;
const int list_response::kListFieldNumber;
#endif  // !_MSC_VER

list_response::list_response()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.group.list_response)
}

void list_response::InitAsDefaultInstance() {
}

list_response::list_response(const list_response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.group.list_response)
}

void list_response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

#if __cplusplus >= 201103L || _MSC_VER >= 1600
list_response::list_response(list_response&& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  Swap(&from);
}
#endif

list_response::~list_response() {
  // @@protoc_insertion_point(destructor:proto.group.list_response)
  SharedDtor();
}

void list_response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void list_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* list_response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return list_response_descriptor_;
}

const list_response& list_response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_2eproto();
  return *default_instance_;
}

list_response* list_response::default_instance_ = NULL;

list_response* list_response::New(::google::protobuf::Arena* arena) const {
  list_response* n = new list_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void list_response::Clear() {
  result_ = 0;
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool list_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.group.list_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.group.list_response.result_code result = 1 [default = OK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::group::list_response_result_code_IsValid(value)) {
            set_result(static_cast< ::proto::group::list_response_result_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }

      // repeated string list = 2;
      case 2: {
        if (tag == 18) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->list(this->list_size() - 1).data(),
            this->list(this->list_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.group.list_response.list");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.group.list_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.group.list_response)
  return false;
#undef DO_
}

void list_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.group.list_response)
  // required .proto.group.list_response.result_code result = 1 [default = OK];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated string list = 2;
  for (int i = 0; i < this->list_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->list(i).data(), this->list(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "proto.group.list_response.list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.group.list_response)
}

::google::protobuf::uint8* list_response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.group.list_response)
  // required .proto.group.list_response.result_code result = 1 [default = OK];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated string list = 2;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->list(i).data(), this->list(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.group.list_response.list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.group.list_response)
  return target;
}

int list_response::ByteSize() const {
  int total_size = 0;

  // required .proto.group.list_response.result_code result = 1 [default = OK];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  // repeated string list = 2;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void list_response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const list_response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const list_response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void list_response::MergeFrom(const list_response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void list_response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_response::CopyFrom(const list_response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void list_response::Swap(list_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_response::InternalSwap(list_response* other) {
  std::swap(result_, other->result_);
  list_.UnsafeArenaSwap(&other->list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata list_response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = list_response_descriptor_;
  metadata.reflection = list_response_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace group
}  // namespace proto

// @@protoc_insertion_point(global_scope)
